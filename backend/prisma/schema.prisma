generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String?
  googleId  String?  @unique
  name      String
  phone     String?
  role      Role     @default(USER)
  imgUrl    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  category    String
  imageUrl    String
  description String
  lastUpdated DateTime

  about             AboutPoint[]       @relation("ProductAbout")
  benefits          BenefitPoint[]     @relation("ProductBenefits")
  activeIngredients ActiveIngredient[] @relation("ProductIngredients")
  formulationTypes  FormulationType[]  @relation("ProductFormulations")
  crops             Crop[]             @relation("ProductCrops")
}

model AboutPoint {
  id        Int     @id @default(autoincrement())
  content   String
  product   Product @relation("ProductAbout", fields: [productId], references: [id],  onDelete: Cascade)
  productId Int
}

model BenefitPoint {
  id        Int     @id @default(autoincrement())
  content   String
  product   Product @relation("ProductBenefits", fields: [productId], references: [id],  onDelete: Cascade)
  productId Int
}

model ActiveIngredient {
  id        Int     @id @default(autoincrement())
  content   String
  product   Product @relation("ProductIngredients", fields: [productId], references: [id],  onDelete: Cascade)
  productId Int
}

model FormulationType {
  id        Int     @id @default(autoincrement())
  content   String
  product   Product @relation("ProductFormulations", fields: [productId], references: [id],  onDelete: Cascade)
  productId Int
}

model Crop {
  id      Int     @id @default(autoincrement())
  content String  @unique
  product Product @relation("ProductCrops", fields: [cropId], references: [id],  onDelete: Cascade)
  cropId  Int
}

model Banner {
  id            Int      @id @default(autoincrement())
  imageUrl      String
  shouldVisible Boolean
  title         String
  paragraph     String
  createdAt     DateTime @default(now())
}

enum Role {
  ADMIN
  USER
}
